and3[a b c] -> o
{
    o <- (a & (b & c));
}

and4[a b c d] -> o
{
    o <- (a & (b & (c & d)));
}

or3[a b c] -> o
{
    o <- (a | (b | c));
}

or4[a b c d] -> o
{
    o <- (a | (b | (c | d)));
}

pulse[a] -> b
{
    b <- (a & !!!a);
}

jkff[j k c] -> q q_inv
{
    s <- !(j & (c & q_inv));
    r <- !(k & (c & q));
    q <- !(s & q_inv);
    q_inv <- !(r & q);
}

gsrff[a b c] -> q q_inv
{
    s_inv <- !(a & c);
    r_inv <- !(b & c);
    q <- !(s_inv & q_inv);
    q_inv <- !(r_inv & q);
}

dlatch[d c] -> q q_inv
{
    s <- !(d & c);
    r <- !(!d & c);
    q <- !(s & q_inv);
    q_inv <- !(r & q);
}

dff[d c] -> q q_inv
{   
    c0 <- !c;
    c1 <- !c0;
    md md_inv <- dlatch[d c0];
    q q_inv <- dlatch[md c1];
}

pos_jkff[j k c] -> q q_inv
{
    d0 <- !(j & q_inv);
    d1 <- !(!k & q);
    d <- !(d0 & d1);
    q q_inv <- dff[d c];
}

tff[t] -> q q_inv
{
    q q_inv <- dff[q_inv t];
}

freqdiv[i] -> clk1 clk2 clk4 clk8 clk16 clk32 clk64
{
    clk1 <- i;
    clk2 a_inv <- tff[clk1];
    clk4 b_inv <- tff[a_inv];
    clk8 c_inv <- tff[b_inv];
    clk16 d_inv <- tff[c_inv];
    clk32 e_inv <- tff[d_inv];
    clk64 f_inv <- tff[e_inv];
}

halfadder[in0 in1] -> sum carry
{
    sum <- (in0 ^ in1);
    carry <- (in0 & in1);
}

fulladder[a b cin] -> s c
{
    sum1 carry1 <- halfadder[a b];
    s carry2 <- halfadder[sum1 cin];
    c <- (carry1 | carry2);
}


addsub8x8[ctrl a1 a2 a4 a8 a16 a32 a64 a128 b1 b2 b4 b8 b16 b32 b64 b128]
-> o1 o2 o4 o8 o16 o32 o64 o128 overflow sign
{
    o1 c1 <- fulladder[a1 (b1 ^ ctrl) ctrl];
    o2 c2 <- fulladder[a2 (b2 ^ ctrl) c1];
    o4 c4 <- fulladder[a4 (b4 ^ ctrl) c2];
    o8 c8 <- fulladder[a8 (b8 ^ ctrl) c4];
    o16 c16 <- fulladder[a16 (b16 ^ ctrl) c8];
    o32 c32 <- fulladder[a32 (b32 ^ ctrl) c16];
    o64 c64 <- fulladder[a64 (b64 ^ ctrl) c32];
    last_b <- (b128 ^ ctrl);
    o128 carry <- fulladder[a128 last_b c64];
    overflow <- (and3[!o128 last_b a128] | and3[o128 !last_b b128]);
    sign <- o128;
}

and8x8[a1 a2 a4 a8 a16 a32 a64 a128 b1 b2 b4 b8 b16 b32 b64 b128]
-> o1 o2 o4 o8 o16 o32 o64 o128
{
    o1 <- (a1 & b1);
    o2 <- (a2 & b2);
    o4 <- (a4 & b4);
    o8 <- (a8 & b8);
    o16 <- (a16 & b16);
    o32 <- (a32 & b32);
    o64 <- (a64 & b64);
    o128 <- (a128 & b128);
}

or8x8[a1 a2 a4 a8 a16 a32 a64 a128 b1 b2 b4 b8 b16 b32 b64 b128]
-> o1 o2 o4 o8 o16 o32 o64 o128
{
    o1 <- (a1 | b1);
    o2 <- (a2 | b2);
    o4 <- (a4 | b4);
    o8 <- (a8 | b8);
    o16 <- (a16 | b16);
    o32 <- (a32 | b32);
    o64 <- (a64 | b64);
    o128 <- (a128 | b128);
}

xor8x8[a1 a2 a4 a8 a16 a32 a64 a128 b1 b2 b4 b8 b16 b32 b64 b128]
-> o1 o2 o4 o8 o16 o32 o64 o128
{
    o1 <- (a1 ^ b1);
    o2 <- (a2 ^ b2);
    o4 <- (a4 ^ b4);
    o8 <- (a8 ^ b8);
    o16 <- (a16 ^ b16);
    o32 <- (a32 ^ b32);
    o64 <- (a64 ^ b64);
    o128 <- (a128 ^ b128);
}

mux2[d0 d1 s] -> y
{
    y <- ((d0 & !s) | (d1 & s));
}

mux4[d0 d1 d2 d3 s0 s1 e] -> y
{
    s0_inv <- !s0;
    s1_inv <- !s1;
    e_inv <- !e;
    a <- and4[d0 e_inv s0_inv s1_inv];
    b <- and4[d1 e_inv s0 s1_inv];
    c <- and4[d2 e_inv s0_inv s1];
    d <- and4[d3 e_inv s0 s1];
    y <- or4[a b c d];
}

mux8[d0 d1 d2 d3 d4 d5 d6 d7 s0 s1 s2 e] -> y
{
    m0 <- mux4[d0 d1 d2 d3 s0 s1 e];
    m1 <- mux4[d4 d5 d6 d7 s0 s1 e];
    y <- mux2[m0 m1 s2];
}

demux2[d s] -> y0 y1
{
    y0 <- (d & !s);
    y1 <- (d & s);
}

demux4[d s0 s1 e] -> y0 y1 y2 y3
{
    s0_inv <- !s0;
    s1_inv <- !s1;
    y0 <- and4[d e s0_inv s1_inv];
    y1 <- and4[d e s0 s1_inv];
    y2 <- and4[d e s0_inv s1];
    y3 <- and4[d e s0 s1];
}

demux8[d s0 s1 s2] -> y0 y1 y2 y3 y4 y5 y6 y7
{
    y0 y1 y2 y3 <- demux4[d s0 s1 !s2];
    y4 y5 y6 y7 <- demux4[d s0 s1 s2];
}

zerodetect8[a1 a2 a4 a8 a16 a32 a64 a128] -> zero
{
    chunk1_8 <- or4[a1 a2 a4 a8];
    chunk16_128 <- or4[a16 a32 a64 a128];
    zero <- !(chunk1_8 | chunk16_128);
}

main[ctrl1 ctrl2 a1 a2 a4 a8 a16 a32 a64 a128 b1 b2 b4 b8 b16 b32 b64 b128]
-> overflow sign zero
{
    as1 as2 as4 as8 as16 as32 as64 as128 overflow sign <- addsub8x8[ctrl1 a1 a2 a4 a8 a16 a32 a64 a128 b1 b2 b4 b8 b16 b32 b64 b128];
    an1 an2 an4 an8 an16 an32 an64 an128 <- and8x8[a1 a2 a4 a8 a16 a32 a64 a128 b1 b2 b4 b8 b16 b32 b64 b128];
    o1 o2 o4 o8 o16 o32 o64 o128 <- or8x8[a1 a2 a4 a8 a16 a32 a64 a128 b1 b2 b4 b8 b16 b32 b64 b128];
    e <- lo;
    ao1 <- mux2[an1 o1 ctrl1];
    ao2 <- mux2[an2 o2 ctrl1];
    ao4 <- mux2[an4 o4 ctrl1];
    ao8 <- mux2[an8 o8 ctrl1];
    ao16 <- mux2[an16 o16 ctrl1];
    ao32 <- mux2[an32 o32 ctrl1];
    ao64 <- mux2[an64 o64 ctrl1];
    ao128 <- mux2[an128 o128 ctrl1];
    r1 <- mux2[ao1 as1 ctrl2];
    r2 <- mux2[ao2 as2 ctrl2];
    r4 <- mux2[ao4 as4 ctrl2];
    r8 <- mux2[ao8 as8 ctrl2];
    r16 <- mux2[ao16 as16 ctrl2];
    r32 <- mux2[ao32 as32 ctrl2];
    r64 <- mux2[ao64 as64 ctrl2];
    r128 <- mux2[ao128 as128 ctrl2];
    zero <- zerodetect8[r1 r2 r4 r8 r16 r32 r64 r128];
    #0:0 <- r1;
    #0:1 <- r2;
    #0:2 <- r4;
    #0:3 <- r8;
    #0:4 <- r16;
    #0:5 <- r32;
    #0:6 <- r64;
    #0:7 <- r128;
}
